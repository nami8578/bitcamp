UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 1), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 1) WHERE id=1;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 3), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 3) WHERE id=3;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 4), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 4) WHERE id=4;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 6), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 6) WHERE id=6;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 7), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 7) WHERE id=7;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 8), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 8) WHERE id=8;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 12), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 12) WHERE id=12;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 14), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 14) WHERE id=14;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 15), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 15) WHERE id=15;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 17), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 17) WHERE id=17;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 19), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 19) WHERE id=19;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 23), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 23) WHERE id=23;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 24), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 24) WHERE id=24;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 25), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 25) WHERE id=25;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 27), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 27) WHERE id=27;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 30), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 30) WHERE id=30;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 31), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 31) WHERE id=31;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 32), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 32) WHERE id=32;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 33), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 33) WHERE id=33;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 35), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 35) WHERE id=35;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 36), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 36) WHERE id=36;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 38), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 38) WHERE id=38;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 39), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 39) WHERE id=39;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 43), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 43) WHERE id=43;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 44), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 44) WHERE id=44;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 45), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 45) WHERE id=45;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 47), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 47) WHERE id=47;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 48), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 48) WHERE id=48;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 51), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 51) WHERE id=51;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 52), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 52) WHERE id=52;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 53), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 53) WHERE id=53;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 54), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 54) WHERE id=54;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 56), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 56) WHERE id=56;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 57), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 57) WHERE id=57;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 60), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 60) WHERE id=60;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 61), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 61) WHERE id=61;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 65), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 65) WHERE id=65;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 67), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 67) WHERE id=67;
UPDATE projects SET funds_receive=(SELECT SUM(m.package_price * m.package_count) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 69), supporter_cnt=(SELECT COUNT(DISTINCT user_id) FROM supporting_projects INNER JOIN (SELECT package_price, package_count, supporting_project_id FROM supporting_packages sp INNER JOIN project_packages pp ON sp.project_package_id = pp.id) as m ON supporting_projects.supporting_project_id = m.supporting_project_id WHERE project_id = 69) WHERE id=69;



UPDATE project_packages SET sales_quantity=135 WHERE id=1;
UPDATE project_packages SET sales_quantity=0 WHERE id=2;
UPDATE project_packages SET sales_quantity=84 WHERE id=3;
UPDATE project_packages SET sales_quantity=10 WHERE id=4;
UPDATE project_packages SET sales_quantity=0 WHERE id=5;
UPDATE project_packages SET sales_quantity=54 WHERE id=6;
UPDATE project_packages SET sales_quantity=81 WHERE id=7;
UPDATE project_packages SET sales_quantity=109 WHERE id=8;
UPDATE project_packages SET sales_quantity=0 WHERE id=9;
UPDATE project_packages SET sales_quantity=0 WHERE id=10;
UPDATE project_packages SET sales_quantity=0 WHERE id=11;
UPDATE project_packages SET sales_quantity=93 WHERE id=12;
UPDATE project_packages SET sales_quantity=0 WHERE id=13;
UPDATE project_packages SET sales_quantity=117 WHERE id=14;
UPDATE project_packages SET sales_quantity=4 WHERE id=15;
UPDATE project_packages SET sales_quantity=0 WHERE id=16;
UPDATE project_packages SET sales_quantity=28 WHERE id=17;
UPDATE project_packages SET sales_quantity=0 WHERE id=18;
UPDATE project_packages SET sales_quantity=70 WHERE id=19;
UPDATE project_packages SET sales_quantity=0 WHERE id=20;
UPDATE project_packages SET sales_quantity=0 WHERE id=21;
UPDATE project_packages SET sales_quantity=0 WHERE id=22;
UPDATE project_packages SET sales_quantity=150 WHERE id=23;
UPDATE project_packages SET sales_quantity=15 WHERE id=24;
UPDATE project_packages SET sales_quantity=113 WHERE id=25;
UPDATE project_packages SET sales_quantity=0 WHERE id=26;
UPDATE project_packages SET sales_quantity=43 WHERE id=27;
UPDATE project_packages SET sales_quantity=0 WHERE id=28;
UPDATE project_packages SET sales_quantity=0 WHERE id=29;
UPDATE project_packages SET sales_quantity=25 WHERE id=30;
UPDATE project_packages SET sales_quantity=57 WHERE id=31;
UPDATE project_packages SET sales_quantity=61 WHERE id=32;
UPDATE project_packages SET sales_quantity=21 WHERE id=33;
UPDATE project_packages SET sales_quantity=0 WHERE id=34;
UPDATE project_packages SET sales_quantity=61 WHERE id=35;
UPDATE project_packages SET sales_quantity=2 WHERE id=36;
UPDATE project_packages SET sales_quantity=0 WHERE id=37;
UPDATE project_packages SET sales_quantity=88 WHERE id=38;
UPDATE project_packages SET sales_quantity=47 WHERE id=39;
UPDATE project_packages SET sales_quantity=0 WHERE id=40;
UPDATE project_packages SET sales_quantity=0 WHERE id=41;
UPDATE project_packages SET sales_quantity=0 WHERE id=42;
UPDATE project_packages SET sales_quantity=124 WHERE id=43;
UPDATE project_packages SET sales_quantity=69 WHERE id=44;
UPDATE project_packages SET sales_quantity=15 WHERE id=45;
UPDATE project_packages SET sales_quantity=0 WHERE id=46;
UPDATE project_packages SET sales_quantity=52 WHERE id=47;
UPDATE project_packages SET sales_quantity=68 WHERE id=48;
UPDATE project_packages SET sales_quantity=0 WHERE id=49;
UPDATE project_packages SET sales_quantity=0 WHERE id=50;
UPDATE project_packages SET sales_quantity=78 WHERE id=51;
UPDATE project_packages SET sales_quantity=53 WHERE id=52;
UPDATE project_packages SET sales_quantity=3 WHERE id=53;
UPDATE project_packages SET sales_quantity=7 WHERE id=54;
UPDATE project_packages SET sales_quantity=0 WHERE id=55;
UPDATE project_packages SET sales_quantity=46 WHERE id=56;
UPDATE project_packages SET sales_quantity=19 WHERE id=57;
UPDATE project_packages SET sales_quantity=0 WHERE id=58;
UPDATE project_packages SET sales_quantity=0 WHERE id=59;
UPDATE project_packages SET sales_quantity=114 WHERE id=60;
UPDATE project_packages SET sales_quantity=65 WHERE id=61;
UPDATE project_packages SET sales_quantity=0 WHERE id=62;
UPDATE project_packages SET sales_quantity=0 WHERE id=63;
UPDATE project_packages SET sales_quantity=0 WHERE id=64;
UPDATE project_packages SET sales_quantity=107 WHERE id=65;
UPDATE project_packages SET sales_quantity=0 WHERE id=66;
UPDATE project_packages SET sales_quantity=67 WHERE id=67;
UPDATE project_packages SET sales_quantity=0 WHERE id=68;
UPDATE project_packages SET sales_quantity=48 WHERE id=69;
UPDATE project_packages SET sales_quantity=0 WHERE id=70;